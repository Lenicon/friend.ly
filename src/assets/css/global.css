:root {
    --green: #066418;
    --dark-green:#055113;
    --subcolor: #86b46c;
    --subcolor-light:#a2cc8a;
    --black: #333;
    --white: #fff;
    --bg-dark: rgba(0, 0, 0, 0.2);
    --bg-light: rgba(0, 0, 0, 0.1);
    --border: 2px solid rgba(0, 0, 0, 0.2);
    --border-light: 1px solid rgba(0, 0, 0, 0.2);
    --box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.5);
}

.register .logo, .login .logo, .passres .logo {
    font-size: 30px;
    color: var(--white);
    display: flex;
    position:sticky;
    /* top: 50px; */
    margin-bottom: 13px;
    align-items: center;
    gap: 5px;
    font-weight: 800;
}

.register .logo:hover, .login .logo:hover, .passres .logo:hover {
    color: var(--subcolor-light);

    :is(img) {
        opacity: 0.8;
    }
}

.logo img {
    border: 1px solid rgba(255, 255, 255, 1);
    border-radius: 100%;
}

body {
    background: linear-gradient(var(--green), var(--subcolor));
    width: 100vw;
    height: 100vh;
    overflow: hidden;
}

.app {
    position: relative;
}

.register .heading, .login .heading, .passres .heading {
    background: linear-gradient(var(--green), var(--subcolor));
    -moz-background-clip: text;
    -webkit-background-clip: text;
    background-clip: text;
    fill: transparent;
    -webkit-text-fill-color: transparent;
}

.rotate {
    animation: rotation 1s infinite linear;
}


@keyframes rotation {
    from {transform: rotate(0deg);}
    to {transform: rotate(360deg);}
}


* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: sans-serif;
}

* {
    -ms-overflow-style: none; /* IE and Edge */
    /* scrollbar-width: none; */
}

*::-webkit-scrollbar {
    height: 0.5rem;
    width: 0rem;
}

*::-webkit-scrollbar-track {
    background-color: transparent;
}

*::-webkit-scrollbar-thumb {
    background-color: gray;
}


html {
    overflow-x: hidden;
    height: auto !important;
    overflow: -moz-scrollbars-vertical !important;
    overflow-y: scroll !important;
    scroll-behavior: smooth !important;
}



body {
    min-height: 100vh;
    font-size: 14px;
}

a {
    color: inherit;
    text-decoration: none;
}

button {
    padding: 0.75rem 1rem;
    border-radius: 0.3rem;
    border: none;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.4rem;
    background-color: var(--white);
    transition: all 0.3s;
}

button:hover {
    background-color: whitesmoke;
    color: var(--green);
}

.d-flex-row {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.d-flex-column {
    display: flex;
    align-items: center;
    flex-direction: column;
    gap: 1rem;
}

.app-icon {
    height: 50px;
    width: 50px;
    border-radius: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--bg-light);
    cursor: pointer;
}

.app-icon {
    font-size: 1.3rem;
    transition: all 0.3s;
}

.app-icon:hover {
    background-color: var(--bg-dark);
}

.app-icon:disabled {
    background-color: var(--bg-dark);
}

.app-icon.active i {
    transform: rotate(135deg);
}


/* CHECK BOX */
/* Customize the label (the container) */
.cbcontainer {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 16px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    width: 100% !important;
}

/* Hide the browser's default checkbox */
.cbcontainer input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* Create a custom checkbox */
.cbcheckmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 20px;
    width: 20px;
    background-color: var(--bg-light);
}

/* On mouse-over, add a grey background color */
.cbcontainer:hover input ~ .cbcheckmark {
    background-color: var(--bg-dark);
}

/* When the checkbox is checked, add a blue background */
.cbcontainer input:checked ~ .cbcheckmark {
    background-color: var(--green);
}

/* Create the checkmark/indicator (hidden when not checked) */
.cbcheckmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.cbcontainer input:checked ~ .cbcheckmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.cbcontainer .cbcheckmark:after {
    left: 7px;
    top: 3px;
    width: 4px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}